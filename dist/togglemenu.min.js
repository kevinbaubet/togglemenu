!function(s){"use strict";s.ToggleMenu=function(e){return s.extend(this.settings={},s.ToggleMenu.defaults,e),this.menu={current:null},this.instances=[],this.options={},this},s.ToggleMenu.defaults={classes:{prefix:"togglemenu",open:"is-{prefix}-open",active:"is-active",current:"is-current"},menuBeforeLoad:void 0,menuComplete:void 0,menuUnload:void 0},s.ToggleMenu.prototype={setOptions:function(e,t){return this.options[e]=t,this},toggleMenu:function(e,t){if(!this.isCurrentMenu(e))return this.removeMenu(),this.addMenu(e,t)},addMenu:function(e,t){if(!this.isCurrentMenu(e))return this.menu.className=this.getMenuClassName(e),void 0!==this.settings.menuBeforeLoad&&this.settings.menuBeforeLoad.call(this),void 0!==s[this.menu.className]?(this.menu.current=e,void 0===t&&void 0!==this.options[e]&&(t=this.options[e]),this.instances[e]=new s[this.menu.className](this,t)):this.setLog('Menu "'+e+'" not found. Checks if the file '+this.menu.className+" has been loaded.","error"),void 0!==this.settings.menuComplete&&this.settings.menuComplete.call(this),this},removeMenu:function(e){return e=e||this.menu.current,void 0!==s[this.menu.className]&&null!=e&&(s[this.menu.className].prototype.hasOwnProperty("unload")&&s[this.menu.className].prototype.unload.call(this.instances[this.menu.current]),void 0!==this.settings.menuUnload&&this.settings.menuUnload.call(this),this.menu.current=null,delete this.menu.className),this},isCurrentMenu:function(e){return this.menu.current===e},getMenuClassName:function(e){return"ToggleMenu"+e.charAt(0).toUpperCase()+e.substr(1)},getInstances:function(){return this.instances},getItemsParent:function(e){var n=[];return e.length&&e.each(function(e,t){(t=s(t)).find("ul").length&&n.push(t.get(0))}),s(n)},onReady:function(e){return setTimeout(function(){e()},0),this},getElements:function(){return this.elements},getContentElements:function(){return this.getElements().content},getWrapper:function(){return this.getElements().wrapper},setLog:function(e,t){t=t||"log",console[t]("ToggleMenu: "+e)},replacePrefixClass:function(){var n=this;return s.each(n.settings.classes,function(e,t){"string"==typeof t&&(n.settings.classes[e]=t.replace(/{prefix}/,n.settings.classes.prefix))}),n}}}(jQuery);